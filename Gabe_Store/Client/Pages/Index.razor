@page "/"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>GayBE</PageTitle>

<MudDrawer @bind-Open="@open" Elevation="1" ClipMode="@DrawerClipMode.Docked">

    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Фильтры</MudText>
    </MudDrawerHeader>
    
    <MudTextField T="string"></MudTextField>

</MudDrawer>

<MudContainer>
    <MudGrid Style="margin-top:1vh">
        @foreach (GoodPublicDto g in localGoodsStorage)
        {
            <MudItem Style="border-width: 3px; border-color: slategray;" Class="flex-column">
                <MudText>Good name - @g.Name</MudText>
                <MudText>Description - @g.Description</MudText>
                <MudText>Seller - @g.SellerName</MudText>
                <MudText>Launcher - @g.Launcher.ToString()</MudText>
                <MudText>Price - @g.Price.ToString()</MudText>
            </MudItem>
        }
    </MudGrid>

</MudContainer>


@code {
    List<GoodPublicDto> localGoodsStorage = new();

    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    }

    protected override async Task OnInitializedAsync()
    {
        //var result = await Http.GetAsync("api/Goods/get_all");
        //if (result.IsSuccessStatusCode)
        //{
        //    localGoodsStorage = await result.Content.ReadFromJsonAsync<List<Good>>();
        //}
    }
    protected override async void OnParametersSet()
    {
        var result = await Http.GetAsync("api/Goods/get_all");
        if (result.IsSuccessStatusCode)
        {
            localGoodsStorage = await result.Content.ReadFromJsonAsync<List<GoodPublicDto>>();
        }
        StateHasChanged();
    }
}